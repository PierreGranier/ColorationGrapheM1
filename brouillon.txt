optimiser en cherchant la plus petite couleur dispo pour un sommet
make launch xxx.txt
affichage peut etre a la fin de chaque while
faire mon algo

// en trouvant la clique maximale d'un graphe on peut trouver son nombre chromatique
clique :
max_clique = 0;
pour chaque sommet i de ARETES
	tableau[1] bros
	bros.ajoutez(i)
	pour chaque sommet j de ARETES
		// s'il y a une arête entre j et tous les sommets du tableau, ce sommet fait partie de la clique
		int ajouter = 1
		k = 0
		tq k < bros.taille et ajouter = 1
			si j != k et ARETES[j][k] = '0'
				ajouter = 0
		si ajouter = 1
			bros.ajouter(k)
	fin pour
	si bros.taille > max_clique
		max_clique = bros.taille
fin pour

// technique de coloriage :
// commencer par le sommet qui a le plus de freres
// lui mettre une couleur de depart (0)
// ses freres avec une couleur sommet.couleur+1
// rappeller la fonction sur chaque sommet


// COMPARAISON ENTRE MATRICE OU TABLEAU POUR LES COULEURS
// compter les sommets avec la couleur k => possible avec matrice et tableau
// connaitre la couleur d'un sommet => plus rapide avec un tableau : O(1) contre O(N) : constant contre linéaire



https://www.rocq.inria.fr/secret/Anne.Canteaut/COURS_C/chapitre3.html
https://openclassrooms.com/courses/apprenez-a-programmer-en-c/les-chaines-de-caracteres
